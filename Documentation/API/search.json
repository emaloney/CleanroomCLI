{"Structs/ArgumentDeclaration/DeclaredType.html#/s:FOV12CleanroomCLI19ArgumentDeclaration12DeclaredType4flagFMS1_S1_":{"name":"flag","abstract":"<p>An argument that takes no follow-on parameters. A flag can be","parent_name":"DeclaredType"},"Structs/ArgumentDeclaration/DeclaredType.html#/s:FOV12CleanroomCLI19ArgumentDeclaration12DeclaredType11singleValueFMS1_S1_":{"name":"singleValue","abstract":"<p>An argument that takes a single follow-on parameter value.</p>","parent_name":"DeclaredType"},"Structs/ArgumentDeclaration/DeclaredType.html#/s:FOV12CleanroomCLI19ArgumentDeclaration12DeclaredType10multiValueFMS1_S1_":{"name":"multiValue","abstract":"<p>An argument that takes multiple follow-on parameter values.</p>","parent_name":"DeclaredType"},"Structs/ArgumentDeclaration/DeclaredType.html":{"name":"DeclaredType","abstract":"<p>Identifies the declared type of an argument.</p>","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:vV12CleanroomCLI19ArgumentDeclaration4nameSS":{"name":"name","abstract":"<p>The programmatic name of the argument, which may or may not reflect","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:vV12CleanroomCLI19ArgumentDeclaration4typeOS0_12DeclaredType":{"name":"type","abstract":"<p>The argument&rsquo;s type, which determines how the argument (and any","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:vV12CleanroomCLI19ArgumentDeclaration9shortFormGSqVs9Character_":{"name":"shortForm","abstract":"<p>The short-form representation of the argument, a single character. On","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:vV12CleanroomCLI19ArgumentDeclaration8longFormGSqSS_":{"name":"longForm","abstract":"<p>The long-form representation of the argument. On the command-line,","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4nameSS4typeOS0_12DeclaredType_S0_":{"name":"init(name:type:)","abstract":"<p>Creates an argument of the given type.</p>","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4nameSS4typeOS0_12DeclaredType9shortFormVs9Character_S0_":{"name":"init(name:type:shortForm:)","abstract":"<p>Creates a short-form argument of the given type.</p>","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4nameSS4typeOS0_12DeclaredType8longFormSS_S0_":{"name":"init(name:type:longForm:)","abstract":"<p>Creates a long-form argument of the given type.</p>","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4typeOS0_12DeclaredType9shortFormVs9Character_S0_":{"name":"init(type:shortForm:)","abstract":"<p>Creates a short-form argument of the given type.</p>","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4typeOS0_12DeclaredType8longFormSS_S0_":{"name":"init(type:longForm:)","abstract":"<p>Creates a long-form argument of the given type.</p>","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4typeOS0_12DeclaredType9shortFormVs9Character8longFormSS_S0_":{"name":"init(type:shortForm:longForm:)","abstract":"<p>Creates an argument of the given type having both a short- and long-form","parent_name":"ArgumentDeclaration"},"Structs/ArgumentDeclaration.html#/s:FV12CleanroomCLI19ArgumentDeclarationcFT4nameSS4typeOS0_12DeclaredType9shortFormVs9Character8longFormSS_S0_":{"name":"init(name:type:shortForm:longForm:)","abstract":"<p>Creates an argument of the given type having both a short- and long-form","parent_name":"ArgumentDeclaration"},"Structs/Argument.html#/s:vV12CleanroomCLI8Argument8argumentSS":{"name":"argument","abstract":"<p>The first word of the argument, as it appeared on the command line.</p>","parent_name":"Argument"},"Structs/Argument.html#/s:vV12CleanroomCLI8Argument6valuesGSaSS_":{"name":"values","abstract":"<p>Any values associated with the argument.</p>","parent_name":"Argument"},"Structs/Argument.html#/s:vV12CleanroomCLI8Argument11declarationGSqVS_19ArgumentDeclaration_":{"name":"declaration","abstract":"<p>The declaration associated with the argument, or <code>nil</code> if the","parent_name":"Argument"},"Structs/Argument.html#/s:vV12CleanroomCLI8Argument12declaredNameGSqSS_":{"name":"declaredName","abstract":"<p>The declared name of the argument, or <code>nil</code> if the argument was not","parent_name":"Argument"},"Structs/Argument.html#/s:vV12CleanroomCLI8Argument4nameSS":{"name":"name","abstract":"<p>The name of the argument. For declared arguments, this is the same","parent_name":"Argument"},"Structs/ArgumentParser.html#/s:FV12CleanroomCLI14ArgumentParsercFzT12declarationsGSaVS_19ArgumentDeclaration_15shortFormPrefixSS14longFormPrefixSS_S0_":{"name":"init(declarations:shortFormPrefix:longFormPrefix:)","abstract":"<p>Constructs an <code>ArgumentParser</code> with the given argument declarations.</p>","parent_name":"ArgumentParser"},"Structs/ArgumentParser.html#/s:FV12CleanroomCLI14ArgumentParser5parseFzT9argumentsGSaSS__PS_20CommandLineArguments_":{"name":"parse(arguments:)","abstract":"<p>Attempts to parse the given command-line arguments.</p>","parent_name":"ArgumentParser"},"Structs/ArgumentParser.html#/s:FV12CleanroomCLI14ArgumentParser5parseFT_PS_20CommandLineArguments_":{"name":"parse()","abstract":"<p>Parses the command-line arguments of the currently-executing","parent_name":"ArgumentParser"},"Structs/ArgumentParser.html#/s:FV12CleanroomCLI14ArgumentParser5parseFzT11commandLineSS_PS_20CommandLineArguments_":{"name":"parse(commandLine:)","abstract":"<p>Parses the passed-in command-line arguments.</p>","parent_name":"ArgumentParser"},"Structs/ArgumentParser.html":{"name":"ArgumentParser","abstract":"<p>Used to parse command-line arguments, optionally enforcing one or more"},"Structs/Argument.html":{"name":"Argument","abstract":"<p>Represents an argument encountered by an <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/ArgumentParser.html\">ArgumentParser</a></code> while parsing"},"Structs/ArgumentDeclaration.html":{"name":"ArgumentDeclaration","abstract":"<p>Represents an argument that might be encountered on the command line.</p>"},"Protocols/CommandLineArguments.html#/s:vP12CleanroomCLI20CommandLineArguments7commandSS":{"name":"command","abstract":"<p>The command as invoked from the command line.</p>","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:vP12CleanroomCLI20CommandLineArguments5namesGSaSS_":{"name":"names","abstract":"<p>The names of the arguments for which <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments3hasFT8argumentSS_Sb\">has(argument:)</a></code> would return","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments8argumentFSSGSqVS_8Argument_":{"name":"argument(_:)","abstract":"<p>Returns the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/Argument.html\">Argument</a></code> with the given name.</p>","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments3hasFT8argumentSS_Sb":{"name":"has(argument:)","abstract":"<p>Determines if the argument with the given name was present in the argument","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments3hasFT16declaredArgumentSS_Sb":{"name":"has(declaredArgument:)","abstract":"<p>Determines if the argument with the given name was present in the argument","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments12declaredTypeFSSGSqOVS_19ArgumentDeclaration12DeclaredType_":{"name":"declaredType(_:)","abstract":"<p>Returns the <code>DeclaredType</code> associated with the argument with the given name.</p>","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments3hasFT5valueSS_Sb":{"name":"has(value:)","abstract":"<p>Determines whether the argument with the specified name has at least one","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments3hasFT14multipleValuesSS_Sb":{"name":"has(multipleValues:)","abstract":"<p>Determines whether the argument with the specified name has multiple","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments5valueFSSGSqSS_":{"name":"value(_:)","abstract":"<p>Returns the first string value of the argument with the given name.</p>","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments8requiredFzSSSS":{"name":"required(_:)","abstract":"<p>Returns the first string value of the argument with the given name.</p>","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html#/s:FP12CleanroomCLI20CommandLineArguments9allValuesFSSGSaSS_":{"name":"allValues(_:)","abstract":"<p>Returns all string values for the argument with the given name.</p>","parent_name":"CommandLineArguments"},"Protocols/CommandLineArguments.html":{"name":"CommandLineArguments","abstract":"<p>Represents a parsed set of command-line arguments created by an"},"Protocols.html":{"name":"Protocols","abstract":"The following protocols are available globally."},"Structs.html":{"name":"Structs","abstract":"The following structs are available globally."}}